import { Button, VerticalBox, ListView, StandardListView} from "sixtyfps_widgets.60";

// Font imports
import "../fonts/JetBrainsMono-Regular.ttf";
import "../fonts/JetBrainsMono-Bold.ttf";
import "../fonts/JetBrainsMono-Italic.ttf";
import "../fonts/JetBrainsMono-BoldItalic.ttf";


export struct Rocket := {
    id: int, 
    ms: int, 
    pings: int,
}

export struct activeLocation := {
    timestamp: string,
    gps_solve_status: string,
    gps_latitude: float,
    gps_longitude: float,
    gps_altitude: float,
    gps_speed: float,
    gps_satellites: int,
}

export AppWindow := Window {
    callback quit();

    preferred-width: 1100px;
    preferred-height: 800px;
    title: "Ground Station";
    default-font-family: "JetBrains Mono";

    // Need to show loading screen?
    property<bool> loading_shown: true;

    // Main rocket list
    property<[Rocket]> rocketList: [];
    
    callback changeActiveRocket(int);
    property <int> activeRocket: 0;

    // Render image
    property<image> altitudePlot: @image-url("");
    property<activeLocation> currentLocation: {
        timestamp: "",
        gps_solve_status: "",
        gps_latitude: 0.0,
        gps_longitude: 0.0,
        gps_altitude: 0.0,
        gps_speed: 0.0,
        gps_satellites: 0,
    };

    /* Main Side Bar
    
    Contains a list of all the transmitting rockets
    Displays:
    - Name
    - Status (Ready/Armed/In Flight/Parachuted/Landed)
    - Time since last transmission
    - Distance from ground station    
    */
    
    // Toggle between loading screen and main window

    if (loading-shown) : Rectangle {
        width: 100%;
        height: 100%;
        Text {
            x: parent.x + 10px;
            y: parent.y + 10px;
            vertical-alignment: center;
            horizontal-alignment: center;
            text: "Waiting for reciever...";
            font-size: 20px;
        }
    }

    if (!loading-shown) : HorizontalLayout { 
        height: 100%;
        width: 100%;
        spacing: 20px;
        VerticalBox { 
            
            Text {
                text: "Rocket List";
                font-size: 20px;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            VerticalBox {
                width: 400px;
                height: 100%;
                alignment: start;
                for rocket in rocketList : rect := Rectangle {
                    width: parent.width;
                    height: 50px;
                    border-width: 2px;
                    border-color: #797979;

                    if (rocket.id == activeRocket) : Rectangle {
                        width: parent.width;
                        height: 50px;
                        border-width: 2px;
                        border-color: #000000;
                    }
                 
                    Text {
                        x: parent.x + 10px;
                        y: parent.y + 8px; 
                        text: "ID: " + rocket.id + " | ms: " + rocket.ms + "| # Pings: " + rocket.pings;
                        font-size: 14px;
                    }
    
                    touch := TouchArea { 
                        clicked => { changeActiveRocket(rocket.id); activeRocket = rocket.id }
                    }
    
    
                }
            }
        }
        

        VerticalLayout { 
            width: 100%;
            height: 100%;
            spacing: 20px;
            Rectangle { 
                width: 100%;
                height: 30%;
                background: #1a1a1a;
                Text {
                    x: parent.x + 10px;
                    y: parent.y + 10px;
                    font-size: 14px;
                    color: #ffffff;
                    text: "Time:" + currentLocation.timestamp + "\nSolve Status: " + currentLocation.gps_solve_status + "\nLatitude: " + currentLocation.gps_latitude + "\nLongitude: " + currentLocation.gps_longitude + "\nAltitude (meters): " + currentLocation.gps_altitude + "\nSpeed (knots): " + currentLocation.gps_speed + "\n# Satellites: " + currentLocation.gps_satellites;
                    horizontal-stretch: 0;
                    vertical-stretch: 0;
                }
            }

            Text {
                text: "Altitude Plot";
                font-size: 20px;
            }
            Rectangle {
                width: 500px;
                height: 500px;
                background: #1a1a1a;
                Image {
                    width: parent.width;
                    height: parent.height;
                    source: altitudePlot;
                }
            }
            
        }

    }

    
}
